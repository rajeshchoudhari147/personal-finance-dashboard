datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts      Account[]
  transactions  Transaction[]
  categories    Category[]
  budgets       Budget[]
}

model Account {
  id        String   @id @default(cuid())
  name      String
  type      String   // checking, savings, credit, etc.
  balance   Decimal  @default(0)
  currency  String   @default("AUD")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId       String
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@index([userId])
}

model Category {
  id          String   @id @default(cuid())
  name        String
  color       String?  // For UI representation
  icon        String?  // For UI representation
  type        String   // income or expense
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId       String
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
  budgets      Budget[]

  @@index([userId])
}

model Transaction {
  id          String    @id @default(cuid())
  amount      Decimal
  date        DateTime
  description String
  type        String    // income or expense
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  userId      String
  user        User      @relation(fields: [userId], references: [id])
  accountId   String
  account     Account   @relation(fields: [accountId], references: [id])
  categoryId  String
  category    Category  @relation(fields: [categoryId], references: [id])

  @@index([userId])
  @@index([accountId])
  @@index([categoryId])
}

model Budget {
  id        String   @id @default(cuid())
  amount    Decimal
  month     DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId     String
  user       User     @relation(fields: [userId], references: [id])
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  @@index([userId])
  @@index([categoryId])
} 